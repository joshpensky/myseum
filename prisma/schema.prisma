// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("SUPABASE_DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String   @id @db.Uuid
  avatar    String?
  bio       String?
  updatedAt DateTime @default(now()) @updatedAt

  museum Museum?

  @@map("users")
}

model Museum {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  curator   User   @relation(fields: [curatorId], references: [id])
  curatorId String @unique @db.Uuid

  galleries Gallery[]

  @@map("museums")
}

enum GalleryColor {
  mint
  navy
  pink
  paper
  ink
}

model Gallery {
  id        Int          @id @default(autoincrement())
  name      String
  color     GalleryColor @default(paper)
  height    Int          @default(40)
  xPosition Int
  yPosition Int
  createdAt DateTime     @default(now())
  updatedAt DateTime     @default(now()) @updatedAt

  museum   Museum @relation(fields: [museumId], references: [id])
  museumId Int

  artworks GalleryArtwork[]

  // @@unique([museumId, xPosition, yPosition])
  @@map("galleries")
}

enum MeasureUnit {
  in
  cm
}

model Frame {
  id          Int         @id @default(autoincrement())
  src         String
  description String
  width       Float
  height      Float
  depth       Float
  unit        MeasureUnit @default(in)
  windowX1    Float
  windowY1    Float
  windowX2    Float
  windowY2    Float
  windowX3    Float
  windowY3    Float
  windowX4    Float
  windowY4    Float

  artworks Artwork[]

  @@map("frames")
}

model Artist {
  id   Int    @id @default(autoincrement())
  name String

  artworks Artwork[]

  @@map("artists")
}

model Artwork {
  id          Int         @id @default(autoincrement())
  title       String
  description String
  src         String
  alt         String
  width       Float
  height      Float
  depth       Float       @default(0)
  unit        MeasureUnit @default(in)
  createdAt   DateTime    @default(now())
  acquiredAt  DateTime    @default(now())

  frame   Frame? @relation(fields: [frameId], references: [id])
  frameId Int?

  artist   Artist? @relation(fields: [artistId], references: [id])
  artistId Int?

  galleries GalleryArtwork[]

  @@map("artworks")
}

model GalleryArtwork {
  xPosition Int
  yPosition Int

  artwork   Artwork @relation(fields: [artworkId], references: [id])
  artworkId Int

  gallery   Gallery @relation(fields: [galleryId], references: [id])
  galleryId Int

  @@id(fields: [artworkId, galleryId])
}
