// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("SUPABASE_DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum GalleryColor {
  mint
  navy
  pink
  paper
  ink
}

enum Matting {
  none
  light
  dark
}

enum MeasureUnit {
  in
  cm
  mm
  px
}

model User {
  id       String  @id @db.Uuid
  name     String  @default("")
  bio      String  @default("")
  headshot String?

  updatedAt DateTime @default(now()) @updatedAt

  museum   Museum?
  frames   Frame[]
  artworks Artwork[]

  addedAt    DateTime @default(now())
  modifiedAt DateTime @default(now()) @updatedAt

  @@map("users")
}

model Museum {
  id          Int       @id @default(autoincrement())
  name        String
  description String    @default("")
  galleries   Gallery[]

  curator   User   @relation(fields: [curatorId], references: [id])
  curatorId String @unique @db.Uuid

  addedAt    DateTime @default(now())
  modifiedAt DateTime @default(now()) @updatedAt

  @@map("museums")
}

model Gallery {
  id          Int             @id @default(autoincrement())
  name        String
  description String          @default("")
  color       GalleryColor    @default(paper)
  height      Int             @default(40)
  artworks    PlacedArtwork[]

  museum   Museum @relation(fields: [museumId], references: [id])
  museumId Int

  addedAt    DateTime @default(now())
  modifiedAt DateTime @default(now()) @updatedAt

  // @@unique([museumId, posX, posY])
  @@map("galleries")
}

model PlacedArtwork {
  artwork   Artwork @relation(fields: [artworkId], references: [id])
  artworkId Int

  frame    Frame?  @relation(fields: [frameId], references: [id])
  frameId  Int?
  isScaled Boolean
  scaling  Int
  matting  Matting @default(none)

  posX      Int
  posY      Int
  gallery   Gallery @relation(fields: [galleryId], references: [id])
  galleryId Int

  addedAt    DateTime @default(now())
  modifiedAt DateTime @default(now()) @updatedAt

  @@id(fields: [artworkId, galleryId])
  @@map("placed_artworks")
}

model Frame {
  id          Int    @id @default(autoincrement())
  src         String
  description String

  width  Float
  height Float
  depth  Float
  unit   MeasureUnit @default(in)

  windowX1 Float
  windowY1 Float
  windowX2 Float
  windowY2 Float
  windowX3 Float
  windowY3 Float
  windowX4 Float
  windowY4 Float

  placements PlacedArtwork[]

  owner   User   @relation(fields: [ownerId], references: [id])
  ownerId String @db.Uuid

  addedAt    DateTime @default(now())
  modifiedAt DateTime @default(now()) @updatedAt

  @@map("frames")
}

model Artwork {
  id          Int    @id @default(autoincrement())
  title       String
  description String
  src         String
  alt         String

  width  Float
  height Float
  depth  Float       @default(0)
  unit   MeasureUnit @default(in)

  createdAt  DateTime?
  acquiredAt DateTime  @default(now())

  artist   Artist? @relation(fields: [artistId], references: [id])
  artistId Int?

  placements PlacedArtwork[]

  owner   User   @relation(fields: [ownerId], references: [id])
  ownerId String @db.Uuid

  addedAt    DateTime @default(now())
  modifiedAt DateTime @default(now()) @updatedAt

  @@map("artworks")
}

model Artist {
  id   Int    @id @default(autoincrement())
  name String

  artworks Artwork[]

  addedAt    DateTime @default(now())
  modifiedAt DateTime @default(now()) @updatedAt

  @@map("artists")
}
