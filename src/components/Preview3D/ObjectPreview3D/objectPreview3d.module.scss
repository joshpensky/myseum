.container {
  @include size(100%);
  position: relative;
}

.wrapper {
  @include absolute(50% x x 50%);
  width: calc(var(--width, 0) * 1px);
  height: calc(var(--height, 0) * 1px);
  // In order:
  // 1)   centers the frame on X/Y
  // 2)   scales to fit on rotation
  // 3,4) rotates frame on 30deg axis (isometric)
  // 5)   centers the frame on Z axis with changing depth
  transform: translate(-50%, -50%) scale(var(--scale, 1)) rotateX(calc(var(--angle, 0) * -1deg))
    rotateY(calc(var(--angle, 0) * 1deg)) translate3d(0, 0, calc(0.5px * var(--depth, 0)));
  transition: width 300ms $ease-out-expo, height 300ms $ease-out-expo, transform 300ms ease;
  will-change: transform;

  &,
  > * {
    transform-style: preserve-3d;
  }
}

.front {
  @include absolute(0);
}

.top {
  @include absolute(50% x x 50%);
  height: calc(var(--depth, 0) * 1px);
  transform: translate(-50%, -50%) rotateX(-90deg) rotateY(180deg)
    translate3d(0, calc(var(--depth, 0) * 0.5px), calc(var(--height, 0) * 0.5px));
  transform-origin: center center;
  width: 100%;
  will-change: transform;
}

.left {
  @include absolute(50% x x 50%);
  height: 100%;
  transform: translate(-50%, -50%) rotateX(0) rotateY(90deg)
    translate3d(calc(var(--depth, 0) * 0.5px), 0, calc(var(--width, 0) * -0.5px));
  transform-origin: center center;
  width: calc(var(--depth, 0) * 1px);
  will-change: transform;
}

.inner-bottom {
  position: absolute;
  top: calc(var(--y, 0) * 1px);
  left: calc(var(--x, 0) * 1px);
  height: calc(var(--length, 0) * 1px);
  width: calc(var(--depth, 0) * 1px);
  transform-origin: top left;
  transform: rotateZ(calc(var(--angle, 0) * 1deg)) rotateY(90deg);
}

.inner-right {
  position: absolute;
  top: calc(var(--y, 0) * 1px);
  left: calc(var(--x, 0) * 1px);
  height: calc(var(--length, 0) * 1px);
  width: calc(var(--depth, 0) * 1px);
  transform-origin: top left;
  transform: rotateZ(calc(var(--angle, 0) * 1deg)) rotateY(90deg);
}
