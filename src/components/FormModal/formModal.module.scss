@keyframes overlay-enter {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes overlay-leave {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

.overlay {
  @include fixed(0);
  backdrop-filter: blur(2px);
  background-color: c('bg', 0.75);
  z-index: 990;

  &[data-state='open'] {
    animation: overlay-enter 150ms linear forwards 1;
  }

  &[data-state='closed'] {
    animation: overlay-leave 150ms linear forwards 1;
  }
}

@keyframes modal-enter {
  from {
    opacity: var(--opacity);
    transform: translate(var(--translate)) scale(var(--scale));
  }
  to {
    opacity: 1;
    transform: translate(0, 0) scale(1);
  }
}

@keyframes modal-leave {
  from {
    opacity: 1;
    transform: translate(0, 0) scale(1);
  }
  to {
    opacity: var(--opacity);
    transform: translate(var(--translate)) scale(var(--scale));
  }
}

.root {
  @include fixed(sz(4) x sz(4) sz(4));
  z-index: 1000;

  &[data-state='open'] {
    animation: modal-enter 400ms $ease-out-circ forwards 1;
  }

  &[data-state='closed'] {
    animation: modal-leave 400ms $ease-out-circ forwards 1;
  }

  @include mq($bp-modal-drawer) {
    --translate: 0, 0;
    --scale: 0.97;
    --opacity: 0;
    min-width: calc(400px - #{sz(4)});
    width: calc((1 / 3 * 100%) - #{sz(4)});
    max-width: calc(550px - #{sz(4)});
  }

  @include mq(max, $bp-modal-drawer) {
    @include fixed(sz(4) 0 0 0);
    --translate: 0, 100%;
    --scale: 1;
    --opacity: 0;

    // Add background for drags upward
    &::before {
      @include absolute(x 0 0);
      background-color: black;
      height: 100px;
      content: '';
    }
  }
}

.modal {
  @include absolute(0 x x 0);
  @include size(100%);
  background-color: c('bg');
  border-radius: sz(4);
  box-shadow: 0 0 0 1px c('border');
  color: c('text');
  display: flex;
  flex-direction: column;
  overflow: hidden;
  transition: 400ms $ease-out-circ;

  @include mq(max, $bp-modal-drawer) {
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
    box-shadow: 0 1px 0 0 c('bg'), 0 0 0 1px c('border');
  }
}

.header {
  @include padding(sz(4));
  align-items: center;
  background-color: c('bg');
  border-bottom: 1px solid transparent;
  border-top-left-radius: sz(4);
  border-top-right-radius: sz(4);
  display: flex;
  flex-direction: column;
  justify-content: center;
  text-align: center;
  position: relative;
  z-index: 2;

  @include mq(max, $bp-modal-drawer) {
    cursor: grab;
  }
}

.header__drag-handle {
  background-color: c('border');
  border-radius: sz(1);
  height: sz(0.5);
  margin-bottom: sz(2);
  transform: translateY(sz(-1));
  width: sz(8);

  @include mq($bp-modal-drawer) {
    display: none;
  }
}

.header__close {
  @include absolute(50% x x sz(3));
  transform: translateY(-50%);
}

.header__title {
  font-size: $fs-sm;
}

.header__desc {
  color: c('secondary-text');
  font-size: $fs-xs;
  line-height: 1;
  margin-top: sz(0.5);
}

.header__progress {
  @include absolute(x 0 -1px);
  height: 1px;
  background-color: c('border', 0.4);
  overflow: hidden;

  &::after {
    @include absolute(0);
    content: '';
    background-color: c('border');
    box-shadow: 2px 0 0 0 c('bg');
    transform: translateX(calc((var(--progress, 1) * 100%) - 100%));
  }
}

.body {
  display: flex;
  flex-direction: column;
  flex: 1;
  overflow-y: auto;
}

.screen {
  @include padding(sz(4) sz(5) x);
  display: flex;
  flex-direction: column;
  flex: 1;
}

.title {
  @include h3;
}

.description {
  color: c('secondary-text');
  margin-bottom: sz(4);
}

.sidecar {
  align-items: flex-start;
  display: flex;
  flex: 1;
  flex-direction: column;

  @include mq($bp-modal-drawer) {
    @include fixed(0 sz(-8) 0 x);
    @include margin(x sz(4));
    background: c('bg');
    border: 1px solid c('white');
    border-radius: sz(4);
    max-width: calc(100vw - 400px - #{sz(8)});
    min-width: calc(100vw - 550px - #{sz(8)});
    overflow: hidden;
    width: calc((2 / 3 * 100vw) - #{sz(8)});
    transform: translateX(100%);
  }
}

.footer {
  @include sticky(x x 0 x);
  @include padding(sz(4) x);
  align-items: flex-end;
  display: flex;
  width: 100%;
  z-index: 3;

  &::before {
    @include absolute(0 sz(-4) 0);
    backdrop-filter: blur(2px);
    background-color: c('bg', 0.7);
    content: '';
    pointer-events: none;
  }

  button {
    flex: 1;
    z-index: 2;

    + button {
      margin-left: sz(2);
    }
  }
}

:export {
  varBpDrawer: $bp-modal-drawer;
  varDrawerEasing: $ease-out-circ;
}
