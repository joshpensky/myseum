@import '../root-abstracts';

.active-content {
  align-items: center;
  justify-content: center;

  @include mq(max, $bp-active-area) {
    @include sticky(0 x x);
    backdrop-filter: blur(2px);
    background-color: c('bg', 0.7);
    display: flex;
    justify-content: center;
    margin-bottom: sz(4);
    width: calc(100% + #{sz(4)} * 2);
    transform: translateX(sz(-4));
    z-index: 2;

    &::after {
      @include absolute(x 0 sz(-4));
      backdrop-filter: blur(2px);
      background-color: c('bg', 0.7);
      content: '';
      height: sz(4);
      mask-image: scrim-gradient(to top, 'bg');
      pointer-events: none;
    }
  }

  @include mq($bp-active-area) {
    @include with-motion {
      transition: background-color 150ms ease-out;
    }

    &.active-content--light {
      background-color: c('border');
    }
  }
}

.preview {
  @include size(100%);
  position: relative;

  @include mq(max, $bp-active-area) {
    border-radius: sz(2.5);
    height: 300px;
    margin-bottom: sz(2);
    width: calc(100% - #{sz(4)} * 2);

    @include with-motion {
      transition: background-color 150ms ease-out;
    }

    .active-content--light & {
      background-color: c('border');
    }
  }
}

.preview__inner {
  @include absolute(sz(6));

  @include mq(max, $bp-active-area) {
    @include absolute(sz(4));
  }
}

.toolbar {
  @include padding(sz(2));
  background-color: c('bg-tint');
  border-radius: sz(2.5);
  display: flex;
  margin-bottom: sz(4);

  @include mq(max, $bp-active-area) {
    margin-bottom: sz(2);
  }
}

.toolbar__button {
  @include size(sz(8));
  box-shadow: 0 0 0 0 c('border'), inset 0 0 0 0 c('bg-tint');
  border-radius: sz(2.5);
  align-items: center;
  display: flex;
  justify-content: center;

  @include with-motion {
    transition: box-shadow 150ms ease-out;
  }

  &:not(:disabled):focus {
    @include outline-none;
    box-shadow: 0 0 0 1px c('border'), inset 0 0 0 1.5px c('bg-tint');
  }

  &[aria-pressed='true'] {
    background-color: c('border');
    color: c('bg');
  }

  svg {
    @include size(sz(5));
    stroke-width: 1.2;
  }

  + .toolbar__button {
    margin-left: sz(2);
  }
}

.toolbar__button--light {
  &[aria-pressed='true'] {
    background-color: c('border', 0.5);
  }
}

.toolbar__button--light__icon {
  @include size(sz(5));
  border-radius: 50%;
  border: 1px solid c('border');
  background-color: c('bg');

  .toolbar__button[aria-pressed='true'] & {
    border: 1px solid c('bg');
    background-color: c('border');
  }
}

.radio-group {
  @include padding(sz(4));
  width: 100%;
  margin-bottom: sz(4);
  position: relative;
}

.radio-group__label {
  align-items: center;
  display: flex;
  font-weight: 500;
  cursor: pointer;

  input:not(:checked) + &::after {
    @include absolute(0);
    content: '';
    z-index: 2;
  }
}

.radio-group__button {
  @include size(sz(6));
  align-items: center;
  border: 1px solid c('border', 0.2);
  border-radius: 50%;
  box-shadow: 0 0 0 1.5px c('bg'), 0 0 0 0 c('border');
  color: c('bg');
  display: flex;
  justify-content: center;
  margin-right: sz(4);

  @include with-motion {
    transition: 150ms ease-out;
  }

  .radio-group:hover & {
    background-color: c('bg-tint');
    border: 1px solid c('border', 0.4);
  }

  input:checked & {
    border: 1px solid c('border', 1);
  }

  input:checked + .radio-group__label & {
    background-color: c('border');
  }

  input:focus + .radio-group__label & {
    box-shadow: 0 0 0 1.5px c('bg'), 0 0 0 2.5px c('border');
  }

  svg {
    @include size(sz(3.5));
    stroke-width: 1.5;

    input:not(:checked) + .radio-group__label & {
      opacity: 0;
    }
  }
}

.radio-group__fieldset {
  padding-left: sz(10);
}

.radio-group__description {
  color: c('secondary-text');
  margin-bottom: sz(4);
}

.radio-group__frame {
  @include absolute(0);
  border: 1px solid c('border', 0.2);
  border-radius: sz(2.5);
  pointer-events: none;

  @include with-motion {
    transition: 150ms ease-out;
  }

  @media (hover: hover) {
    .radio-group:hover input:not(:disabled) ~ & {
      border: 1px solid c('border', 0.4);
    }
  }

  input:not(:disabled):focus ~ & {
    border: 1px solid c('border', 0.4);
  }

  input:checked ~ & {
    border: 1px solid c('border', 1) !important;
  }
}

.field-row {
  display: flex;
}

.field-row__item {
  + .field-row__item {
    margin-left: sz(4);
  }
}

.create-button {
  width: 100%;
}
