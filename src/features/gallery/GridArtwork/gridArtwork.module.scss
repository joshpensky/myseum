.wrapper {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

.artwork {
  align-items: center;
  display: flex;
  justify-content: center;
  height: 100%;
  width: 100%;
  position: relative;
  transition: transform 300ms ease, opacity 150ms ease;

  &::after {
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    border-radius: 5px;
    opacity: 0;
    box-shadow: inset 0 0 0 2px currentColor;
    pointer-events: none;
    touch-action: none;
  }

  &.artwork--dragging {
    transform: scale(var(--drag-scale));
  }

  &.artwork--error,
  &.artwork--disabled {
    opacity: 0.75;
  }

  &.artwork--error {
    overflow: hidden;
    border-radius: 5px;

    &::after {
      opacity: 1;
      transition: opacity 150ms ease;
    }

    &.error--overlapping {
      &::after {
        background-color: c('yellow', 0.5);
        color: c('yellow');
      }
    }

    &.error--out-of-bounds {
      &::after {
        background-color: c('red', 0.5);
        color: c('red');
      }
    }
  }
}

.artwork__shadow {
  box-shadow: var(--shadow);
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  // transition: box-shadow 150ms ease;
}

.drag-handle {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 2rem;
  height: 2rem;
  border-radius: 50%;

  background-color: c('white');
  display: flex;
  align-items: center;
  justify-content: center;

  @media (hover: hover) {
    opacity: 0;
    transition: opacity 150ms ease;

    .wrapper:hover &,
    &:focus {
      opacity: 1;
    }
  }

  &:focus {
    outline: 2px solid transparent;
    box-shadow: 0 0 0 2px c('black'), 0 0 0 3px c('white');
  }

  span {
    display: block;
    width: 1rem;
    color: c('black');
  }
}

:export {
  varColorHighlight: c('highlight', 0.15);
  varColorShadowSm: c('shadow', 0.25);
  varColorShadowLg: c('shadow', 0.15);
}
