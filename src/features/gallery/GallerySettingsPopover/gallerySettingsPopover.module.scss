.fab {
  + .fab {
    margin-top: sz(3);
  }

  &:disabled {
    opacity: 0.5;
    transition: opacity 150ms ease;
  }
}

.settings-icon {
  display: block;
  transform: scale(1.1);
}

.close-icon {
  display: block;
  transition: transform 150ms ease;

  &.add-icon {
    transform: rotate(45deg);
  }
}

.collection-section {
  @include padding(0);
}

$collection-item-height: sz(24);

.collection__title {
  @include padding(sz(4) sz(5) sz(2));
  position: relative;

  &::after {
    content: '';
    @include absolute(x x 0 0);
    width: 100%;
    height: sz(2);
    background-image: linear-gradient(to bottom, c('white'), c('white', 0));
    transform: translateY(100%);
  }
}

.collection__scrollable {
  @include padding(sz(2) sz(5) sz(5));
  overflow-y: auto;
  max-height: 400px;
}

@keyframes load-pulse {
  from {
    opacity: 0.75;
  }
  to {
    opacity: 1;
  }
}

.collection--loading {
  display: flex;
  position: relative;
  cursor: wait;

  &::after {
    content: '';
    @include absolute(0);
    background-image: linear-gradient(to right, c('white', 0), c('white', 1));
  }

  div {
    background: c('black', 0.1);
    content: '';
    height: $collection-item-height;
    width: 100%;
    margin-right: sz(4);
    animation: load-pulse 1000ms $ease-in-out-sine forwards alternate infinite;
  }

  + .collection {
    display: none;
  }
}

.collection__empty {
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: c('black', 0.05);
  border-radius: sz(2);
  color: c('black', 0.5);
  text-align: center;
  min-height: $collection-item-height;
}

.collection {
  display: flex;
  flex-wrap: wrap;
  min-height: sz(4);
  margin-bottom: sz(-4);
}

.collection__item {
  @include margin(x sz(4) sz(4) x);
  align-items: flex-start;
  display: flex;
  height: $collection-item-height;
  position: relative;
}

.add-artwork-button {
  @include absolute(0);
  @include size(100%);
}

.upload-section {
  @include padding(0);
}

.upload-button {
  @include padding(sz(4) sz(5) sz(5));
  width: 100%;
  border-radius: inherit;
  text-align: left;
  transition: background-color 150ms ease;

  &:hover {
    background-color: c('text', 0.05);
  }

  &:focus {
    @include outline-none;
    box-shadow: 0 0 0 1px c('shadow');
    background-color: c('text', 0.1);
  }
}
